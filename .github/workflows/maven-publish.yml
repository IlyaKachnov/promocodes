name: Promocodes pipeline
on:
  push:
    branches:
      - main
      - master
    paths:
      - promocodes/promocodes/**
      - .github/workflows/**
env:
  IMAGE_NAME: promocodes
  OWNER: '${{ github.repository_owner }}'
  VERSION: latest
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
      GPT_TOKEN: ${{ secrets.GPT_TOKEN }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    defaults:
      run:
        working-directory: promocodes
    permissions:
      contents: read
      packages: write
    name: Build image
    steps:
      - uses: actions/checkout@v4
      - name: Update youtube api
        run: sed -i 's/$YOUTUBE_API_KEY/${{ secrets.YOUTUBE_API_KEY }}/' src/main/resources/application.yaml
      - name: Update youtube api
        run: sed -i 's/$GPT_TOKEN/ ${{ secrets.GPT_TOKEN }}/' src/main/resources/application.yaml
      - name: Update youtube api
        run: sed -i 's/$POSTGRES_PASSWORD/${{ secrets.POSTGRES_PASSWORD }}/' src/main/resources/application.yaml
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Extract project version
        id: extract_version
        run: |
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
      - name: login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Grant execute permission for mvnw
        run: chmod +x mvnw
      - name: build the docker image
        uses: docker/build-push-action@v4
        with:
          context: promocodes/
          dockerfile: promocodes/Dockerfile
          push: false
          tags: promocodes:latest
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
      - name: Tag & publish to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/$OWNER_LC/$IMAGE_NAME
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  deploy:
    name: deploy project
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v4
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: create docker compose config
        run: |
          cat docker-compose.yml | envsubst > docker-compose-secret.yml
      - name: copy docker compose config
        run: scp docker-compose-secret.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:docker-compose.yml
      - name: connect and pull

        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<EOF 
          docker-compose down 
          docker system prune -a -f 
          docker-compose pull 
          docker-compose up -d
          EOF
      - name: cleanup config
        if: always()
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "rm docker-compose.yml"
      - name: cleanup keys
        if: always()
        run: rm -rf ~/.ssh docker-compose-secret.yml