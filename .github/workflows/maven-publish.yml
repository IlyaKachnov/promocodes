name: Promocodes pipeline
on:
  push:
    branches:
      - main
      - master
    paths:
      - promocodes/promocodes/**
      - .github/workflows/**
env:
  IMAGE_NAME: promocodes
  OWNER: '${{ github.repository_owner }}'
  VERSION: latest
jobs:
  compile:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: promocodes
    permissions:
      contents: read
      packages: write
    name: Compile project
    steps:
      - name: checkout code
        uses: action/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Compile project
        run: |
          cd promocodes
          ./mvnw clean compile

  build:
    runs-on: ubuntu-latest
    name: Build project
    needs: [compile]
    steps:
      - name: checkout code
        uses: action/checkout@v4
        with:
          fetch-dept: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Compile project
        run: |
          cd promocodes
          ./mvnw clean package
  build-image:
    runs-on: ubuntu-latest
    name: Build image
    needs: [build]
    steps:
      - name: checkout code
        uses: action/checkout@v4
        with:
          fetch-dept: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Extract project version
        id: extract_version
        run: |
          cd book-network
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Grant execute permission for mvnw
        run: chmod +x mvnw
      - name: build the docker image
        uses: docker/build-push-action@v4
        with:
          context: promocodes/
          dockerfile: promocodes/Dockerfile
          push: false
          tags: promocodes:latest
  deploy:
    name: Deploy project
    runs-on: self-hosted
    needs: [build-image]
    steps:
      - name: Create deployment folder
        run: ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ci-cd"
      - name: Copy docker-compose file
        run: scp -oStrictHostKeyChecking=no docker-compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          export GPT_TOKEN=${{ secrets.GPT_TOKEN }}
          export YOTUBE_API_KEY=${{ secrets.YOTUBE_API_KEY }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          cd ci-cd
          docker compose -f docker-compose.yml pull -q
          docker compose -f docker-compose.yml up -d
          EOF